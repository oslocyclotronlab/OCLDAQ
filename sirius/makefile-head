# -*- makefile -*-

ifeq ($(BASEDIR),)
$(error This file must be included from another 'Makefile' with BASEDIR set)
endif

LIBS           = -lm
INCLUDES       = -I$(BASEDIR)/include -I/sw/include
XLIBS          = -L/usr/X11R6/lib -L/sw/lib -lX11 -lXm -lXt -lm  # for X11/Motif apps
XINCLUDES      = -I/usr/X11R6/include 
RLIBS          = $(shell root-config --glibs)                    # for ROOT
RFLAGS         = $(shell root-config --cflags)

CC             = gcc
CFLAGS         = -O3
CXX            = g++
CXXFLAGS       = -Wall -W -O2 -g -fPIC $(DEFINES) $(INCLUDES)

AR             = ar cr
RANLIB         = ranlib
RM             = rm -f

ifeq ($(UIO_APPLICATIONS),)
 INSTALL_DIR   = /Applications/sirius/bin
else
 INSTALL_DIR   = $(UIO_APPLICATIONS)/sirius/bin
endif
 INSTALL_BIN   = install -m 0755
ECHO           = /bin/echo

# some nice messages to print when compiling
ifeq ($(CC),gcc)
CCMSG          = "       [GCC]"
else
CCMSG          = " [other GCC]"
endif
ifeq ($(CXX),g++)
CXXMSG         = "       [CXX]"
CXXLMSG        = "    [CXX-LD]"
else
CXXMSG         = " [other CXX]"
CXXLMSG        = " [o. CXX-LD]"
endif
ARMSG          = "        [AR]"
RLMSG          = "    [RANLIB]"
DEPMSG         = "       [DEP]"


# if SHOW_COMMANDS is not empty, print command instead of '[GCC]'...
ifneq ($(SHOW_COMMANDS),)
  # true is always successful and prints nothing
  ECHO = true
  # '$H' is in front of all compilation commands; if it is empty, the
  # command is shown, if it is '@', it is hidden
  H =
else
  # really print something
  ECHO = echo
  # hide the actual command
  H = @
endif

MAKEFILE_TAIL = $(BASEDIR)/makefile-tail
